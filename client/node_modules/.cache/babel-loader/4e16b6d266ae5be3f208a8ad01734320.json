{"ast":null,"code":"import ShopActionTypes from'./shop.types';import{firestore,convertCollectionsSnapshotToMap}from'../../firebase/firebase.utils';export var fetchCollectionsStart=function fetchCollectionsStart(){return{type:ShopActionTypes.FETCH_COLLECTIONS_START};};export var fetchCollectionsSuccess=function fetchCollectionsSuccess(collectionsMap){return{type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,payload:collectionsMap};};export var fetchCollectionsFailure=function fetchCollectionsFailure(errorMessage){return{type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,payload:errorMessage};};export var fetchCollectionsStartAsync=function fetchCollectionsStartAsync(){return function(dispatch){var collectionRef=firestore.collection('collections');dispatch(fetchCollectionsStart());collectionRef.get().then(function(snapshot){var collectionsMap=convertCollectionsSnapshotToMap(snapshot);dispatch(fetchCollectionsSuccess(collectionsMap));}).catch(function(error){return dispatch(fetchCollectionsFailure(error.message));});};};","map":{"version":3,"sources":["/Users/jon-michaelnarvaez/crwn-clothing/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CAEA,OACEC,SADF,CAEEC,+BAFF,KAGO,+BAHP,CAKA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAO,CAC1CC,IAAI,CAAEJ,eAAe,CAACK,uBADoB,CAAP,EAA9B,CAIP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,cAAc,QAAK,CACxDH,IAAI,CAAEJ,eAAe,CAACQ,yBADkC,CAExDC,OAAO,CAAEF,cAF+C,CAAL,EAA9C,CAKP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,YAAY,QAAK,CACtDP,IAAI,CAAEJ,eAAe,CAACY,yBADgC,CAEtDH,OAAO,CAAEE,YAF6C,CAAL,EAA5C,CAKP,MAAO,IAAME,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAM,CAC9C,MAAO,UAAAC,QAAQ,CAAI,CACjB,GAAMC,CAAAA,aAAa,CAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CACAF,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAEAY,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChB,GAAMZ,CAAAA,cAAc,CAAGL,+BAA+B,CAACiB,QAAD,CAAtD,CACAL,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR,CACD,CALH,EAMGa,KANH,CAMS,SAAAC,KAAK,QAAIP,CAAAA,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAZ,EANd,EAOD,CAXD,CAYD,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};"]},"metadata":{},"sourceType":"module"}